<?xml version="1.0"?>
<configuration>
  <configSections>
    <section name="log4net" type="log4net.Config.Log4NetConfigurationSectionHandler, log4net"/>
    <section name="LicenseFileLocation" type="System.Configuration.NameValueSectionHandler"/>
    <section name="assembliesLoader" type="TVS.Assemblies.AssembliesLoaderSection, TVS"/>
    <section name="applicationSettingsProvider" type="TVS.Config.ApplicationSettingsProviderSection, TVS"/>
    <section name="quartz" type="System.Configuration.NameValueSectionHandler" />
  </configSections>
  <applicationSettingsProvider provider="TVS.Config.LocalSettingsProvider, TVS" />
  <LicenseFileLocation>
    <add key="path" value="licence.transvault.xml"/>
  </LicenseFileLocation>
  <startup useLegacyV2RuntimeActivationPolicy="true">
    <supportedRuntime version="v4.0"/>
  </startup>

  <appSettings>
    <add key="ConnectionString" value="server=(local);database=TV70;Trusted_Connection=True;Min Pool Size=5;Max Pool Size=100;Connection Timeout=600"/>
    <add key="ConnectionPool" value="Min Pool Size=5;Max Pool Size=100"/>
    <add key="ClientTag" value="MigratorTag"/>
    <add key="SQLCommandTimeout" value="1800"/>
    <add key="LogSqlStatements" value="true"/>
    <add key="AutoRecommitLimit" value="3"/>
    <add key="LogPath" value="Engine.log" />
  </appSettings>

  <assembliesLoader>
    <assemblies>
      <assembly
          name="KVS.EnterpriseVault.Interop.EVContentManagementAPI"
          path=""
          searcher="TVS.TransVault.Connector.Wrapper.Ev.EvApiAssemblySearcher, Connector.Wrapper.Ev"/>
      <assembly
          name="KVS.EnterpriseVault.NSFManager"
          path=""
          searcher="TVS.TransVault.Connector.Wrapper.Ev.EvApiAssemblySearcher, Connector.Wrapper.Ev"/>
    </assemblies>
  </assembliesLoader>

  <log4net>
    <logger name="TransVault.ApplicationLogger">
      <level value="INFO"/>
    </logger>
    <appender name="RollingLogFileAppender" type="TVS.Shared.Logging.RollingFileAppender">
      <param name="File" value="Engine.log"/>
      <lockingModel type="log4net.Appender.FileAppender+MinimalLock"/>
      <param name="AppendToFile" value="true"/>
      <param name="MaxSizeRollBackups" value="-1"/>
      <param name="MaximumFileSize" value="5MB"/>
      <param name="StaticLogFileName" value="true"/>
      <param name="PreserveLogFileNameExtension" value="true"/>
      <param name="DatePattern" value="_yyyy-MM-dd_HH-mm-ss"/>
      <param name="RollingStyle" value="Size"/>
      <layout type="log4net.Layout.PatternLayout,log4net">
        <param name="ConversionPattern" value="%d [%thread] %-5p %m%n"/>
      </layout>
    </appender>
    <root>
      <level value="INFO"/>
      <appender-ref ref="RollingLogFileAppender"/>
    </root>
  </log4net>

  <system.runtime.remoting>
    <customErrors mode="off"/>
    <application>
      <service>
        <wellknown mode="Singleton" type="TVS.TransVault.Server.Service.ServerInstance, TV_Engine" objectUri="IServer"/>
      </service>
      <channels>
        <channel ref="tcp" port="1829" secure="true" impersonate="false" protectionLevel="EncryptAndSign">
          <serverProviders>
            <provider type="TVS.TransVault.Server.Remoting.SecurityServerChannelSinkProvider, TV_Engine"/>
            <formatter ref="binary" typeFilterLevel="Full"/>
          </serverProviders>
        </channel>
      </channels>
    </application>
  </system.runtime.remoting>

  <system.net>
    <settings>
      <httpWebRequest useUnsafeHeaderParsing="true"/>
    </settings>
  </system.net>

  <quartz>
    <add key="quartz.threadPool.type" value="Quartz.Simpl.SimpleThreadPool, Quartz" />
    <add key="quartz.threadPool.threadCount" value="5" />
    <add key="quartz.threadPool.threadPriority" value="2" />
    <add key="quartz.jobStore.misfireThreshold" value="3600000" />
    <add key="quartz.jobStore.type" value="Quartz.Simpl.RAMJobStore, Quartz" />
  </quartz>

  <system.web>
    <compilation debug="true" targetFramework="4.0" />
  </system.web>

  <system.runtime.serialization>
    <dataContractSerializer>
      <declaredTypes>
        <add type="TVS.TransVault.EvApiAgent.Contract.EvApiArchiveMetaDataDto, EvApiAgent.Contract">
          <knownType type="TVS.TransVault.EvApiAgent.Contract.EvApiArchiveMetaData2Dto, EvApiAgent.Contract" />
        </add>
      </declaredTypes>
    </dataContractSerializer>
  </system.runtime.serialization>

  <system.serviceModel>
    <behaviors>
      <serviceBehaviors>
        <behavior>
          <!-- To avoid disclosing metadata information, set the value below to false and remove the metadata endpoint above before deployment -->
          <serviceMetadata httpGetEnabled="false"/>
          <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="true"/>
        </behavior>
      </serviceBehaviors>
    </behaviors>
    <bindings>
      <basicHttpBinding>
        <binding name="MessageRetrievingBinding" transferMode="StreamedResponse">
          <security>
            <transport>
              <extendedProtectionPolicy policyEnforcement="Never" />
            </transport>
          </security>
        </binding>
      </basicHttpBinding>
      <wsHttpBinding>
        <binding name="wsHttpBindingConfigurationSettingsService" />
      </wsHttpBinding>
      <netTcpBinding>
        <binding
              name="ConfigSvcBinding"
              closeTimeout="00:01:00"
              openTimeout="00:01:00"
              receiveTimeout="00:1:00"
              sendTimeout="00:01:00"
              hostNameComparisonMode="StrongWildcard"
              maxBufferPoolSize="250000000"
              maxReceivedMessageSize="50000000">
          <readerQuotas
              maxDepth="32"
              maxStringContentLength="1048576"
              maxArrayLength="50000000"
              maxBytesPerRead="4096"
              maxNameTableCharCount="16384" />
          <reliableSession
              ordered="true"
              inactivityTimeout="00:10:00"
              enabled="true" />
          <security
              mode="None">
            <transport clientCredentialType="Windows" />
            <message
                clientCredentialType="Windows"
                algorithmSuite="Default" />
          </security>
        </binding>
      </netTcpBinding>
    </bindings>
    <services>
      <service name="TVS.TransVault.MessageRetriever.Server.MessageRetrievingService">
        <endpoint address="http://localhost:8125" binding="basicHttpBinding"
            bindingConfiguration="MessageRetrievingBinding"
            contract="TVS.TransVault.MessageRetriever.Shared.IMessageRetrievingService" />
      </service>
    </services>
    <serviceHostingEnvironment multipleSiteBindingsEnabled="true" />
    <client>
      <!--<endpoint address="http://localhost:10101/ConfigurationSettingsService"
            binding="wsHttpBinding" bindingConfiguration="wsHttpBindingConfigurationSettingsService"
            contract="ServiceReference.IConfigurationSettingsService"
            name="wsHttpBindingConfigurationSettingsService">-->
      <!--<identity>
                    <userPrincipalName value="mr.smith@mail.corp" />
                </identity>-->
      <!--</endpoint>-->
      <endpoint
          address="net.tcp://localhost:10101/ConfigurationSettingsService"
          binding="netTcpBinding"
          bindingConfiguration="ConfigSvcBinding"
          name="netTcpBindingConfigurationSettingsService"
          contract="ServiceContracts.IConfigurationSettingsService">
      </endpoint>
      <endpoint
          name="EvApiAgentEndpoint"
          address=""
          binding="netTcpBinding"
          bindingConfiguration="ConfigSvcBinding"
          contract="TVS.TransVault.EvApiAgent.Contract.IEvApiAgentService">
        <identity>
          <dns value="localhost"/>
        </identity>
      </endpoint>
    </client>
  </system.serviceModel>
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true"/>
  </system.webServer>
</configuration>
